version: '3.8'  # specify the version of docker-compose if needed

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    


  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    depends_on:
      - zookeeper




  userService:
    build: ./user-service
    container_name: Ecommerce-user-service_c
    image: jasimck/ecommerce-user-service
    restart: unless-stopped
    env_file:
      - ./user-service/.env
    depends_on:
      - kafka
    ports:
      - 3000:3000

  productService:
    build: ./product-service
    container_name: Ecommerce-product-service_c
    image: jasimck/ecommerce-product-service
    restart: unless-stopped
    env_file:
      - ./product-service/.env
    depends_on:
      - kafka
    ports:
      - 3001:3001

  cartService:
    build: ./cart-service
    container_name: Ecommerce-cart-service_c
    image: jasimck/ecommerce-cart-service
    restart: unless-stopped
    env_file:
      - ./cart-service/.env
    depends_on:
      - kafka
    ports:
      - 3003:3003

  orderService:
    build: ./order-service
    container_name: Ecommerce-order-service_c
    image: jasimck/ecommerce-order-service
    restart: unless-stopped
    env_file:
      - ./order-service/.env
    depends_on:
      - kafka
    ports:
      - 3004:3004
